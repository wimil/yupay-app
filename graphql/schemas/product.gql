type ProductPriceVariants {
  name: String
  officeId: String
  quantityMin: Int
  unitPrice: Float
  unitPriceIncIgv: Boolean
}

input ProductPriceVariantsInput {
  name: String
  office: String
  quantityMin: Int!
  unitPrice: Float!
  unitPriceIncIgv: Boolean!
}

type Product {
  id: ID
  business: String
  addedBy: String
  category: String
  name: String!
  photo: String
  code: String
  barcode: String
  icbper: String
  alertQuantity: Float
  igvType: String
  iscPublicUnitPrice: Float
  iscValue: Float
  salesWithoutStock: Boolean
  stockControl: Boolean
  unit: String
  unitPrice: Float
  unitPriceIncIgv: Float
  priceVariants: [ProductPriceVariants]
}

input ProductInput {
  category: String
  currency: String
  name: String!
  photoFile: Upload
  code: String
  barcode: String
  icbper: Boolean
  alertQuantity: Int
  igvType: String
  iscType: String
  iscPublicUnitPrice: Float
  iscValue: Float
  salesWithoutStock: Boolean
  stockControl: Boolean
  unit: String
  unitPrice: Float
  unitPriceIncIgv: Boolean
  priceVariants: [ProductPriceVariantsInput]
}

extend type Query {
  getProducts: [Product]!
}

extend type Mutation {
  createProduct(businessId: String!, input: ProductInput): Product!
  updateProduct(businessId: String!, input: ProductInput): Product!
}
